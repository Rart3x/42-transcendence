version: '3.8'
services:
  postgres:
    build:
      context: ./requirements/postgreSQL 
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5    
    restart: always
    volumes:
     - postgresdata:/var/lib/postgresql/data
    networks:
      - netnet

  backend:
    build:
      context: ./requirements/back
      dockerfile: Dockerfile
    volumes:
      - backenddata:/test/dist
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - netnet

  frontend:
    build:
      context: ./requirements/front
      dockerfile: Dockerfile
    volumes:
      - frontdata:/app/dist
    ports:
      - '8081:80'
    restart: always
    networks:
      - netnet

  nginx:
    image: nginx:stable-alpine
    ports:
      - '8080:80'
    volumes:
      - ./requirements/nginx/nginx.conf:/etc/nginx/nginx.conf
      - frontdata:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - netnet

volumes:
  backenddata:
    name: backenddata
    driver: local
  frontdata:
    name: frontdata
    driver: local
  postgresdata:
    name: postgresdata
    driver: local

networks:
  netnet:
    name: netnet
    driver: bridge